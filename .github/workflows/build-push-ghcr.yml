name: Build and Push Docker Image to Public GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*' # Triggers on version tags like v1.0.0
  workflow_dispatch: # Allows manual triggering

env:
  # Define the base image name.
  IMAGE_BASE_NAME: aou-analysis-runner
  # Define the path to the Dockerfile.
  DOCKERFILE_PATH: ./Dockerfile
  # has to be lowercase
  GHCR_LOWERCASE_OWNER: sauersml

jobs:
  build-and-push-to-ghcr:
    name: Build Docker and Push to GHCR
    runs-on: ubuntu-latest

    # Permissions needed:
    # 'contents: read' to checkout the repository.
    # 'packages: write' to push Docker images (packages) to GHCR.
    permissions:
      contents: 'read'
      packages: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # GITHUB_TOKEN is automatically created by GitHub Actions.
          # It has permissions to push to GHCR for the repository if 'packages: write' permission is set for the job.
          username: ${{ github.actor }} # The GitHub user that initiated the workflow
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Meta (Generate Image Tags and Labels)
        id: meta # Assign an ID to refer to the outputs of this step later
        uses: docker/metadata-action@v5
        with:
          # Construct the full image name for GHCR using the lowercase owner.
          images: ghcr.io/${{ env.GHCR_LOWERCASE_OWNER }}/${{ env.IMAGE_BASE_NAME }}
          # Define tagging strategy:
          tags: |
            # Creates a tag based on the schedule trigger, formatted as YYYYMMDD (if you had a schedule trigger)
            # type=schedule,pattern={{date 'YYYYMMDD'}}
            # Creates a tag based on the branch name (e.g., 'main')
            type=ref,event=branch
            # Creates a tag based on the git tag (e.g., 'v1.0.0')
            type=ref,event=tag
            # Creates a tag based on the short git commit SHA (e.g., 'f1c5767')
            type=sha,format=short,prefix=
            # Creates a 'latest' tag if the push is to the 'main' branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and Push Docker Image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          file: ${{ env.DOCKERFILE_PATH }} # Path to your Dockerfile
          push: true # Actually push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by the 'meta' step
          labels: ${{ steps.meta.outputs.labels }} # Use labels generated by the 'meta' step
          # Enable build caching to speed up subsequent builds on the same runner
          cache-from: type=gha
          cache-to: type=gha,mode=max
